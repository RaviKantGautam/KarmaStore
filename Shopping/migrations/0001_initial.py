# Generated by Django 3.1 on 2020-08-14 16:56

import Shopping.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('fname', models.CharField(max_length=255, verbose_name='First Name')),
                ('lname', models.CharField(max_length=255, verbose_name='Last Name')),
                ('grandtotal', models.FloatField(verbose_name='GrandTotal')),
                ('payment_method', models.CharField(choices=[('online', 'online'), ('COD', 'COD')], default=('online', 'online'), max_length=255, verbose_name='Payment Type')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('zipcode', models.PositiveIntegerField(verbose_name='Zipcode')),
                ('addr', models.TextField(verbose_name='Address')),
                ('phn', models.IntegerField(verbose_name='Mobile Number')),
                ('status', models.CharField(blank=True, choices=[('pd', 'Pending'), ('sp', 'Shipping'), ('dp', 'Dispatch'), ('cr', 'Cancel')], default=('pd', 'Pending'), max_length=255, null=True, verbose_name='Status')),
                ('cancel', models.BooleanField(default=False, verbose_name='Cancelled Status')),
                ('precieve', models.CharField(blank=True, max_length=255, null=True, verbose_name='Person Recieve')),
                ('cpname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Company')),
                ('GST', models.FloatField(default=18.5, verbose_name='GST Tax')),
                ('nettotal', models.FloatField(blank=True, null=True, verbose_name='Net Total')),
                ('discounted_price', models.FloatField(blank=True, null=True, verbose_name='Discounted Total')),
                ('cremark', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-datetime',),
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Subcategory Name')),
                ('logo', models.ImageField(height_field=200, upload_to='', verbose_name='Logo', width_field=200)),
                ('subdescription', models.TextField(verbose_name='Description')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catname', models.CharField(max_length=255, verbose_name='Category Name')),
                ('desc', models.TextField(verbose_name='Description')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('netprice', models.FloatField(verbose_name='Net Price')),
                ('discount', models.FloatField(verbose_name='Discount')),
                ('desc', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('supercat', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('K', 'Kids')], max_length=255, verbose_name='Type')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('changes_done', models.TextField(verbose_name='Changes Note')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shopping.brand', verbose_name='Brand')),
                ('catid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Shopping.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='subscribe',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True, verbose_name='Email')),
                ('status', models.BooleanField(default=True, verbose_name='Active')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('lastdate', models.DateTimeField(auto_now=True, verbose_name='Date')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Name')),
                ('active', models.BooleanField(default=False)),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Age')),
                ('phn_no', models.CharField(blank=True, max_length=12, null=True, validators=[Shopping.models.phn_no_validation], verbose_name='Mobile No.')),
                ('pro_pic', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Profile Pic')),
                ('background_pic', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Background Wallpaper')),
                ('client', models.BooleanField(default=False)),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addr', models.TextField(verbose_name='Address')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('status', models.CharField(choices=[('sp', 'Shipping'), ('dp', 'Dispatch')], max_length=255, verbose_name='Status')),
                ('billid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shopping.bill')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Shopping.product', verbose_name='Product')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewbody', models.TextField(verbose_name='Review')),
                ('star_rating', models.IntegerField(verbose_name='Ratings')),
                ('pid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Shopping.product', verbose_name='Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='ProductProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(18)], verbose_name='Width')),
                ('height', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Height')),
                ('depth', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Depth')),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(300)], verbose_name='Weight')),
                ('color', models.CharField(max_length=10, verbose_name='Color(HEX)')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shopping.product', verbose_name='Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='', verbose_name='Product Pics')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('caption', models.CharField(max_length=255, verbose_name='Caption')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shopping.product', verbose_name='Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, verbose_name='CODE')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Price')),
                ('date_create', models.DateField(verbose_name='Start Date')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentbody', models.TextField(verbose_name='Comment')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('active', models.BooleanField(default=True)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Reply', to='Shopping.comment')),
                ('pid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Shopping.product', verbose_name='Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='brand',
            name='catid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Shopping.category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='brand',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='billdetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Price')),
                ('netprice', models.FloatField(verbose_name='Net Price')),
                ('discount', models.FloatField(verbose_name='Discount')),
                ('qty', models.IntegerField(verbose_name='Quantity')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('billid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shopping.bill', verbose_name='Bill ID')),
                ('proid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shopping.product', verbose_name='Product Id')),
            ],
        ),
        migrations.AddField(
            model_name='bill',
            name='email',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Email'),
        ),
    ]
